# Generated by Django 4.0.4 on 2022-06-19 13:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BotUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_tlg_id', models.CharField(db_index=True, max_length=50, verbose_name='ID телеграма пользователя')),
                ('user_tlg_name', models.CharField(max_length=100, verbose_name='Имя пользователя в телеграме')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'Пользователи',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=50, verbose_name='Название категории товаров')),
            ],
            options={
                'verbose_name': 'Категория товаров',
                'verbose_name_plural': 'Категории товаров',
                'db_table': 'Категории товаров',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_name', models.CharField(max_length=50, verbose_name='Название товара')),
                ('description', models.TextField(max_length=2000, verbose_name='Описание товара')),
                ('price', models.FloatField(max_length=10, verbose_name='Цена товара')),
                ('number_of_items', models.IntegerField(verbose_name='Количество товара в наличии')),
                ('image_for_items_id', models.TextField(blank=True, max_length=2000, null=True, verbose_name='ID картинки для товара')),
                ('items_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cafe_api.categories', verbose_name='Категория товаров')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'db_table': 'Товары',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_tlg_id', models.CharField(max_length=20, verbose_name='ID пользователя телеграм')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время заказа')),
                ('pay_status', models.BooleanField(blank=True, db_index=True, default=False, null=True, verbose_name='Статус оплаты')),
                ('execution_status', models.BooleanField(blank=True, db_index=True, default=False, null=True, verbose_name='Статус выполнения заказа')),
                ('order_items', models.TextField(max_length=4000, verbose_name='Товары из заказа')),
                ('result_orders_price', models.FloatField(verbose_name='Итоговая цена заказа')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'db_table': 'Заказы',
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='OrderArchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id_before_receiving', models.IntegerField(verbose_name='ID заказа перед получением клиентом')),
                ('user_tlg_id', models.CharField(max_length=20, verbose_name='ID пользователя телеграм')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время заказа')),
                ('pay_status', models.BooleanField(blank=True, db_index=True, default=False, null=True, verbose_name='Статус оплаты')),
                ('execution_status', models.BooleanField(blank=True, db_index=True, default=False, null=True, verbose_name='Статус выполнения заказа')),
                ('order_items', models.TextField(max_length=4000, verbose_name='Товары из заказа')),
                ('result_orders_price', models.FloatField(verbose_name='Итоговая цена заказа')),
            ],
            options={
                'verbose_name': 'Архив заказа',
                'verbose_name_plural': 'Архив заказов',
                'db_table': 'Архив заказов',
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='PaidOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=50, verbose_name='номер заказа')),
                ('total_price', models.FloatField(verbose_name='Итоговая сумма заказа')),
                ('tlg_payment_charge_id', models.CharField(max_length=200, verbose_name='ID списания(телеграм)')),
                ('provider_payment_charge_id', models.CharField(max_length=200, verbose_name='ID списания(банк)')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время')),
                ('customer_name', models.CharField(max_length=50, verbose_name='Имя клиента')),
                ('customer_telephone_number', models.CharField(max_length=20, verbose_name='Телефон клиента')),
            ],
            options={
                'verbose_name': 'Данные об оплате заказов',
                'verbose_name_plural': 'Данные об оплате заказов',
                'db_table': 'Данные об оплате заказов',
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='OrderBasket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_number_in_basket', models.IntegerField(default=1, verbose_name='Количество данного товара в корзине')),
                ('user_tlg_id', models.CharField(max_length=20, verbose_name='ID пользователя телеграм')),
                ('items_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cafe_api.items', verbose_name='ID товара')),
            ],
            options={
                'verbose_name': 'Товары в корзине',
                'verbose_name_plural': 'Товары в корзине',
                'db_table': 'Товары в корзине',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='MediaForItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.FileField(blank=True, max_length=5000, null=True, upload_to='files/%Y/%m/%d')),
                ('for_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cafe_api.items', verbose_name='Для товара')),
            ],
            options={
                'verbose_name': 'Медиа',
                'verbose_name_plural': 'Медиа',
                'db_table': 'Медиа для товаров',
                'ordering': ['id'],
            },
        ),
    ]
